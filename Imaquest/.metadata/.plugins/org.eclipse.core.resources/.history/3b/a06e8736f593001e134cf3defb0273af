package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;



	@RequestMapping(path="/login",method=RequestMethod.GET)
	public String loginForm(Model model) {
		System.out.println("test");
		return "login"; // login.htmlのパス
	}

	@PostMapping("/login")
	public String login(@RequestParam String character_Name, @RequestParam String password) {
		// ログイン処理を実装
		// プレイヤーIDとパスワードの検証が必要
		return "redirect:/imaquest/playerList"; // ログイン後のリダイレクト先
	}

	@GetMapping("/register")
	public String registerForm(Model model) {
		return "register"; // register.htmlのパス
	}

	 @PostMapping("/register")
	    public String register(@RequestParam("character_Name") String character_Name, @RequestParam("password") String password, Model model) {
	        // プレイヤー名が既に存在するか確認
	        String sql = "SELECT COUNT(*) FROM player_character WHERE character_Name = ?";
	        int count = jdbcTemplate.queryForObject(sql, Integer.class, character_Name);

	        if (count > 0) {
	            // 既に同じ名前のプレイヤーが存在する場合、エラーメッセージを設定して登録画面を再表示
	            model.addAttribute("errorMessage", "その名前は既に使用されています。別の名前を選択してください。");
	            return "register";
	        }

//	    // 存在しない場合のみアカウントを作成
	     

	   



		return "redirect:/imaquest/login"; // 登録後にログイン画面にリダイレクト
	}
}
